# Main Netlify configuration file
# Note: This configuration tells Netlify to use the pre-built files in the dist directory

[build]
  # The directory to publish
  publish = "dist"
  # No build command needed since files are already pre-built locally
  command = "echo 'Using pre-built files from dist directory'"

# Explicitly handle asset files with correct MIME types
[[headers]]
  for = "/assets/*.css"
    [headers.values]
    Content-Type = "text/css"
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/assets/*.js"
    [headers.values]
    Content-Type = "application/javascript"
    Cache-Control = "public, max-age=31536000, immutable"

# Make sure assets are served correctly
[[redirects]]
  from = "/assets/*"
  to = "/assets/:splat"
  status = 200

# Don't redirect for static HTML pages that exist
[[redirects]]
  from = "/location/*"
  to = "/location/:splat/index.html"
  status = 200
  force = false

[[redirects]]
  from = "/appraiser/*"
  to = "/appraiser/:splat/index.html"
  status = 200
  force = false

# Redirect all remaining routes to index.html for client-side routing
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# Additional header configurations
[[headers]]
  # Define headers for HTML files
  for = "/*.html"
    [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"

# Define headers for the sitemap - complete configuration
[[headers]]
  for = "/sitemap.xml"
    [headers.values]
    Cache-Control = "public, max-age=3600"
    Content-Type = "application/xml"
    X-Robots-Tag = "noarchive"

# Redirect for the art appraiser directory
[[redirects]]
  from = "/directory/*"
  to = "/directory/:splat"
  status = 200

# Redirect for the art appraisers landing pages
[[redirects]]
  from = "/art-appraiser/*"
  to = "/landing/art-appraiser/:splat"
  status = 200

[[redirects]]
  from = "/painting-value/*"
  to = "/landing/painting-value/:splat"
  status = 200

# Redirect for the art appraisal screener pages
[[redirects]]
  from = "/screener/*"
  to = "/screener/:splat"
  status = 200

# Redirects for image generation service API endpoints
[[redirects]]
  from = "/api/generate"
  to = "/.netlify/functions/image-generation-proxy"
  status = 200

[[redirects]]
  from = "/api/generate-bulk"
  to = "/.netlify/functions/image-generation-proxy"
  status = 200

# Redirects for image generation service images
[[redirects]]
  from = "/images/*"
  to = "/directory/images/appraisers/:splat"
  status = 301

# Security Headers
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Content-Security-Policy = """
      default-src 'self' https: data: blob:;
      script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.googletagmanager.com https://*.tawk.to https://embed.tawk.to https://cdn.jsdelivr.net https://unpkg.com https://*.appraisily.com https://www.googleadservices.com https://www.google-analytics.com https://googleads.g.doubleclick.net https://*.netlify.app;
      style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://*.tawk.to https://*.appraisily.com https://*.netlify.app;
      img-src 'self' data: https: blob:;
      font-src 'self' data: https://fonts.gstatic.com https://*.tawk.to;
      connect-src 'self' https: wss://*.tawk.to wss://*.us-central1.run.app https://www.google-analytics.com https://stats.g.doubleclick.net;
      frame-src 'self' https://*.tawk.to https://www.youtube.com https://www.googletagmanager.com https://*.appraisily.com;
      worker-src 'self' blob:;
      child-src blob:;
      media-src 'self' https:;
      object-src 'none';
      base-uri 'self';
      form-action 'self';
      upgrade-insecure-requests;
    """

# Cache static assets
[[headers]]
  for = "/*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable" 